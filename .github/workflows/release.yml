name: Build and publish internal release
permissions:
  contents: write
on:
  workflow_dispatch:
    inputs:
      releaseLevel:
        description: Version to bump
        required: true
        type: choice
        default: minor
        options:
          - major
          - minor
          - patch

jobs:
  run-static-checks:
    uses: ./.github/workflows/staticcheck.yml

  bump-app-version:
    needs: run-static-checks
    runs-on: ubuntu-latest
    environment: prod
    outputs:
      newAppVersion: ${{ steps.get-current-version.outputs.NEW_APP_VERSION }}
    steps:
      - id: checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.SSH_DEPLOY_KEY_GHA }}
      - id: setup-node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: '.node-version'
      - id: yarn-cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - id: install-packages
        run: yarn install --frozen-lockfile
      - id: bump-version
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          if [[ ${{ github.event.inputs.releaseLevel }} == "major" ]]; then
            echo "Bumping the major version"
            yarn version --major
          elif [[ ${{ github.event.inputs.releaseLevel }} == "minor" ]]; then
            echo "Bumping the minor version"
            yarn version --minor
          elif [[ ${{ github.event.inputs.releaseLevel }} == "patch" ]]; then
            echo "Bumping the patch version"
            yarn version --patch
          else
            echo "Unknown release level: ${{ github.event.inputs.releaseLevel }}"
            exit 1
          fi
      - id: get-current-version
        run: |
          NEW_APP_VERSION=$(node -p -e "require('./package.json').version")
          echo "Current app version: $NEW_APP_VERSION"
          echo "NEW_APP_VERSION=$NEW_APP_VERSION" >> $GITHUB_OUTPUT
      - id: create-tag
        run: |
          git tag ${{ steps.get-current-version.outputs.NEW_APP_VERSION }}
      - id: push-changes
        run: |
          git push --no-verify --follow-tags origin HEAD:${GITHUB_REF#refs/heads/}
      - id: github-release-creation
        run: |
          gh release create ${{ steps.get-current-version.outputs.NEW_APP_VERSION }} --latest --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-android:
    needs: bump-app-version
    environment: prod
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2
        with:
          fetch-depth: 0
          ref: ${{ needs.bump-app-version.outputs.newAppVersion }}
      - id: setup-node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: '.node-version'
      - id: yarn-cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - id: install-packages
        run: yarn install --frozen-lockfile
      - id: setup
        uses: ./.github/actions/setup-composite
      - id: setup-jdk-17
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 #v3.11.0
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - id: setup-android-sdk
        uses: android-actions/setup-android@00854ea68c109d98c75d956347303bf7c45b0277 #v3.2.1
      - id: setup-ruby
        uses: ruby/setup-ruby@401c19e14f474b54450cd3905bb8b86e2c8509cf #v1.204.0
        with:
          bundler-cache: true
      - id: build-android
        name: Build and submit to Play Store
        run: |
          cd android
          bundle exec fastlane alpha_playstore
        shell: bash
        env:
          RUBYOPT: '-rostruct'
          APP_VERSION: ${{ needs.bump-app-version.outputs.newAppVersion }}
          ENCODED_IOAPP_GOOGLE_SERVICES_JSON_FILE: ${{secrets.ENCODED_IOAPP_GOOGLE_SERVICES_JSON_FILE}}
          ENCODED_APP_JSON_KEY_FILE: ${{secrets.ENCODED_APP_JSON_KEY_FILE}}
          ENCODED_IO_APP_RELEASE_KEYSTORE: ${{secrets.ENCODED_IO_APP_RELEASE_KEYSTORE}}
          IO_APP_RELEASE_STORE_FILE: ${{secrets.IO_APP_RELEASE_STORE_FILE}}
          IO_APP_RELEASE_STORE_PASSWORD: ${{secrets.IO_APP_RELEASE_STORE_PASSWORD}}
          IO_APP_RELEASE_KEY_ALIAS: ${{secrets.IO_APP_RELEASE_KEY_ALIAS}}
          IO_APP_RELEASE_KEY_PASSWORD: ${{secrets.IO_APP_RELEASE_KEY_PASSWORD}}
      - id: download-universal-apk-from-store
        continue-on-error: true
        run: |
          ./scripts/android-release.sh ./android/app          
          cd android
          VERSION_CODE=$(sed -n 's/.*versionCode \(.*\)/\1/p' "app/build.gradle")
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          bundle exec fastlane download_apk
        env:
          RUBYOPT: '-rostruct'
          ENCODED_APP_JSON_KEY_FILE: ${{secrets.ENCODED_APP_JSON_KEY_FILE}}
          VERSION_CODE: ${{ env.VERSION_CODE }}
      - id: upload-universal-apk
        continue-on-error: true
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with:
          name: AgeVerification-universal.apk
          path: android/AgeVerification-universal.apk
      - id: upload-aab
        continue-on-error: true
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with:
          name: app-release.aab
          path: android/app/build/outputs/bundle/release/app-release.aab
      - id: upload-android-assets-release
        continue-on-error: true
        run: |
          gh release upload ${{ needs.bump-app-version.outputs.newAppVersion }} \
            android/app/build/outputs/bundle/release/app-release.aab#android-app-release.aab \
            android/AgeVerification-universal.apk#AgeVerification-universal.apk
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-ios:
    needs: bump-app-version
    environment: prod
    runs-on: macos-15-xlarge
    steps:
      - id: set-xcode-version
        run: sudo xcode-select -s '/Applications/Xcode_16.4.0.app/Contents/Developer'
        shell: bash
      - id: checkout
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2
        with:
          fetch-depth: 0
          ref: ${{ needs.bump-app-version.outputs.newAppVersion }}
      - id: setup-node
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
        with:
          node-version-file: '.node-version'
      - id: yarn-cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      - id: install-packages
        run: yarn install --frozen-lockfile
      - id: setup
        uses: ./.github/actions/setup-composite
      - id: setup-ruby
        uses: ruby/setup-ruby@401c19e14f474b54450cd3905bb8b86e2c8509cf #v1.204.0
        with:
          bundler-cache: true
      - id: add-ssh-deploy-key
        run: |
          echo -e "Host github.com
            AddKeysToAgent yes
            IdentityFile ~/.ssh/id_ed25519" > ~/.ssh/config
          echo -e "$SSH_DEPLOY_KEY_GHA" > ~/.ssh/id_ed25519
          chmod 400 ~/.ssh/id_ed25519
          ssh-add ~/.ssh/id_ed25519
        env:
          SSH_DEPLOY_KEY_GHA: ${{secrets.SSH_DEPLOY_KEY}}
      - id: build-ios
        name: Build and submit to App Store
        run: |
          cd ios
          bundle exec fastlane beta_testflight
        env:
          LC_ALL: en_US.UTF-8
          LANG: en_US.UTF-8
          RUBYOPT: '-rostruct'
          APP_VERSION: ${{ needs.bump-app-version.outputs.newAppVersion }}
          APP_STORE_API_KEY_ID: ${{secrets.APP_STORE_API_KEY_ID}}
          APP_STORE_API_PRIVATE_KEY: ${{secrets.APP_STORE_API_PRIVATE_KEY}}
          APP_STORE_API_KEY_ISSUER_ID: ${{secrets.APP_STORE_API_KEY_ISSUER_ID}}
          ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD: ${{secrets.ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD}}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      - id: upload-dsym-files
        if: ${{ always() }}
        continue-on-error: true
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4.0.3
        with:
          name: AgeVerification.app.dSYM.zip
          path: ios/AgeVerification.app.dSYM.zip
      - id: upload-ipa
        continue-on-error: true
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8
        with:
          name: AgeVerification.ipa
          path: ios/AgeVerification.ipa
      - id: upload-ipa-release
        continue-on-error: true
        run: |
          gh release upload ${{ needs.bump-app-version.outputs.newAppVersion }} ios/AgeVerification.ipa#AgeVerification.ipa
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
